<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:CoursesManager.UI.Views.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors/Gradients.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="ErrorButtonHoverGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#CCD85653" Offset="0" />
        <GradientStop Color="#CC7C3130" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ErrorButtonPressedGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#CC7C3130" Offset="0" />
        <GradientStop Color="#CCD85653" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SecondaryGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#51BAF7" Offset="0" />
        <GradientStop Color="#D5F0FF" Offset="1" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="SphericalBlueGradient"
                         GradientOrigin="0.3, 0.3" Center="0.5, 0.5" RadiusX="0.5" RadiusY="0.5">
        <GradientStop Color="#4DA6FF" Offset="0" />
        <GradientStop Color="#0066CC" Offset="1" />
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="SphericalRedGradient"
                         GradientOrigin="0.3, 0.3" Center="0.5, 0.5" RadiusX="0.5" RadiusY="0.5">
        <GradientStop Color="#D85653" Offset="0" />
        <GradientStop Color="#7C3130" Offset="1" />
    </RadialGradientBrush>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    
    <Style x:Key="TextBoxEditStudentStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.3" BlurRadius="6" ShadowDepth="3" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="ReadOnlyMaterialTextBoxStyle">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxEditCourseStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="40"/>
        <!-- Verhoogde hoogte -->
        <Setter Property="FontSize" Value="20"/>
        <!-- Kleine aanpassing van FontSize -->
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.3" BlurRadius="3" ShadowDepth="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PasswordBoxEditCourseStyle1" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.3" BlurRadius="6" ShadowDepth="3" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="8" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="8"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Effect">
        <Setter.Value>
            <DropShadowEffect Color="Black" Opacity="0.3" BlurRadius="6" ShadowDepth="3" />
        </Setter.Value>
    </Setter>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="DatePicker">
                <Grid>
                    <Border x:Name="PART_TestBoxBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10" SnapsToDevicePixels="True">
                        <TextBox x:Name="PART_TextBox"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 Foreground="{TemplateBinding Foreground}"
                                 Padding="{TemplateBinding Padding}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Text="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, StringFormat='{}{0:MM/dd/yyyy}'}"/>
                    </Border>
                </Grid>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
   
    <Style x:Key="PlaceholderTextBoxStyle1" TargetType="{x:Type local:PlaceholderTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PlaceholderTextBox}">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    
    <Style x:Key="ListBoxEditStudentStyle1" TargetType="{x:Type ListBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
        </Style.Resources>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <!-- Voeg ItemContainerStyle toe om marge voor elk ListBoxItem in te stellen -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                    </Style.Resources>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="White" BorderBrush="Transparent" BorderThickness="0" CornerRadius="15" Padding="0 0 0 15" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="White" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle1"
       TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
           Value="True" />
        <Setter Property="Padding"
           Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
           Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
           Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
           Value="Transparent" />
        <Setter Property="BorderBrush"
           Value="Transparent" />
        <Setter Property="BorderThickness"
           Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                          Value="{StaticResource HoverOverGradient}" />
                            <Setter Property="BorderBrush"
                          Value="#E2DBFE" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                Value="False" />
                                <Condition Property="IsSelected"
                                Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                          Value="{StaticResource SelectorGradient}" />
                            <Setter Property="BorderBrush"
                          Value="#DAD2FD" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style TargetType="TextBox" x:Key="EditableMaterialTextBoxStyle">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="15"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Courier New" />
    </Style>



    <Style TargetType="PasswordBox" x:Key="EditableMaterialPasswordBoxStyle">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="15"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Courier New" />
    </Style>




    <!-- DataGrid Style -->
    <Style x:Key="CustomDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="ColumnHeaderHeight" Value="50" />
        <Setter Property="RowHeight" Value="40" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeader Style -->
    <Style x:Key="CustomDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#283593" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="2" Opacity="0.3" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridRow Style -->
    <Style x:Key="CustomDataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="White" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="1" Opacity="0.1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
         
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E3F2FD" /> 
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListBoxItemStyle"
   TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
       Value="True" />
        <Setter Property="Padding"
       Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
       Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
       Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
       Value="Transparent" />
        <Setter Property="BorderBrush"
       Value="Transparent" />
        <Setter Property="BorderThickness"
       Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                      Value="Transparent" />
                            <Setter Property="BorderBrush"
                      Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                            Value="False" />
                                <Condition Property="IsSelected"
                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                      Value="Transparent" />
                            <Setter Property="BorderBrush"
                      Value="Transparent" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PrimaryDialogHeaderBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="CornerRadius" Value="15,15,0,0" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorDialogHeaderBorder" TargetType="Border" BasedOn="{StaticResource PrimaryDialogHeaderBorder}">
        <Setter Property="Background" Value="{StaticResource ErrorGradient}" />
    </Style>

    <LinearGradientBrush x:Key="ButtonHoverGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#948DFF" Offset="0" />
        <GradientStop Color="#584FE3" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#584FE3" Offset="0" />
        <GradientStop Color="#948DFF" Offset="1" />
    </LinearGradientBrush>

    <Style TargetType="Button" x:Key="BaseButton">
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <!--<Setter Property="Background" Value="{StaticResource PrimaryGradient}" />-->
        <Setter Property="BorderBrush" Value="#6C66D1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Padding="20 0 20 0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}" />
        <Setter Property="Foreground" Value="White" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverGradient}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressedGradient}" />
                <Setter Property="BorderBrush" Value="#FF635BDC" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="6" ShadowDepth="5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{StaticResource ErrorGradient}" />
        <!--<Setter Property="Background" Value="{StaticResource PrimaryGradient}" />-->
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Padding="20 0 20 0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ErrorButtonHoverGradient}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ErrorButtonPressedGradient}" />
                <Setter Property="BorderBrush" Value="#FF635BDC" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="6" ShadowDepth="5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryDialogButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8" Height="40" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="10,5" />
    </Style>

    <Style x:Key="ErrorDialogButton" TargetType="Button" BasedOn="{StaticResource PrimaryDialogButton}">
        <Setter Property="Background" Value="{StaticResource ErrorGradient}" />
    </Style>

    <Style TargetType="materialDesign:PackIcon" x:Key="IconWithShadowStyle">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="2" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="IconButtonWithShadowStyle" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5, 0.5">
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="HoverEnterStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                     To="1.2" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                     To="1.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="HoverEnterStoryboard" />
                                <BeginStoryboard Name="HoverExitStoryboard">
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                     To="1" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                     To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="HoverEnterStoryboard" />
                                <RemoveStoryboard BeginStoryboardName="HoverExitStoryboard" />
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                     To="0.9" Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                     To="0.9" Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)"
                                     To="2" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                     To="1" Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                     To="1" Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="MyContentPresenter"
                                     Storyboard.TargetProperty="(RenderTransform).(TranslateTransform.Y)"
                                     To="0" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#66FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Checkbox style 10-->

    <Style x:Key="CheckBoxStyle10" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#02008C" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Ellipse x:Name="HighlightCircle"
                                 Width="32" Height="32"
                                 Fill="White"
                                 Opacity="0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center" />

                        <BulletDecorator Background="Transparent"
                                         VerticalAlignment="Center"
                                         Margin="6,0,0,0">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Width="20"
                                        Height="20"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="3"
                                        Background="White"
                                        ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                          Width="13"
                                          Height="13"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Stretch="Fill"
                                          Stroke="White"
                                          StrokeEndLineCap="Round"
                                          StrokeStartLineCap="Round"
                                          StrokeThickness="2"
                                          Data="M 0 5 L 3 8 L 8 0"
                                          Visibility="Collapsed"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Neutrale staat (unchecked) -->
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#02008C" />
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#02008C" />
                        </Trigger>

                        <!-- Geselecteerde staat (checked) -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Border" Property="Background" Value="#02008C" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="White" />
                        </Trigger>

                        <!-- Hover staat voor zowel checked als unchecked -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HighlightCircle" Property="Opacity" Value="0.5" />
                            <Setter TargetName="HighlightCircle" Property="Fill" Value="#BCE6FD" />
                        </Trigger>

                        <!-- Ingedrukte staat voor zowel checked als unchecked -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HighlightCircle" Property="Opacity" Value="1" />
                            <Setter TargetName="HighlightCircle" Property="Fill" Value="#83CEFA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxEditCourseStyle2" TargetType="ComboBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Achtergrond en rand -->
                        <Border x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8" />

                        <!-- Inhoud en pijltje -->
                        <Grid>
                            <!-- Geselecteerde inhoud -->
                            <ContentPresenter x:Name="ContentSite"
                                      Margin="10,0,40,0" 
                                HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />

                                <!-- Pijltje -->
                                <ToggleButton x:Name="DropDownButton"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  Focusable="false"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Width="30"
                                  Height="30"
                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Path Data="M 0 0 L 4 4 L 8 0 Z"
                              Width="10"
                              Height="6"
                              Fill="Black"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                                </ToggleButton>
                        </Grid>

                        <!-- Popup voor de items -->
                        <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False">
                            <Border x:Name="PopupBorder"
                            Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="15"
                            SnapsToDevicePixels="True">
                                <ScrollViewer Margin="4">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover-effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>

                        <!-- Focus-effect -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>

                        <!-- Uitgeschakelde staat -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedImageStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="300" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5" Opacity="0.5" />
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundedDatePickerStyle" TargetType="DatePicker">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid>
                        <!-- Achtergrond en rand -->
                        <Border x:Name="BackgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                            <DockPanel>
                                <!-- Datumtekst -->
                                <DatePickerTextBox x:Name="PART_TextBox"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               Padding="10,0,0,0" />

                                <!-- Knop voor kalender -->
                                <Button x:Name="PART_Button"
                                    DockPanel.Dock="Right"
                                    Focusable="False"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Width="30"
                                    Height="30"
                                    Margin="0,0,5,0">
                                    <Path Data="M 0 0 L 10 0 L 10 10 L 0 10 Z M 2 2 L 8 2 L 8 8 L 2 8 Z"
                                      Fill="Gray"
                                      Stretch="Uniform"
                                      Width="16"
                                      Height="16"
                                      Margin="7" />
                                </Button>
                            </DockPanel>
                        </Border>

                        <!-- Kalender-popup -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           StaysOpen="False"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="White"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15"
                                Padding="5">
                                <Calendar x:Name="PART_Calendar" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover-effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>

                        <!-- Focus-effect -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>

                        <!-- Uitgeschakelde staat -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.56" />
                            <Setter TargetName="PART_Button" Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SmallIconButtonWithShadowStyle" BasedOn="{StaticResource IconButtonWithShadowStyle}">
        <!-- Override the Foreground to make the icon blue -->
        <Setter Property="Foreground" Value="#02008C" />

        <!-- Make the icon smaller -->
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style TargetType="Button" x:Key="GridSmallIconButtonWithShadowStyle" BasedOn="{StaticResource SmallIconButtonWithShadowStyle}">
        <Setter Property="Visibility" Value="Hidden" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryButtonTemplate" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
        <!--<Setter Property="Background" Value="{StaticResource PrimaryGradient}" />-->
        <Setter Property="BorderBrush" Value="#6C66D1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15 15 0 0" Padding="20 0 20 0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}" />
        <Setter Property="Foreground" Value="White" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverGradient}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressedGradient}" />
                <Setter Property="BorderBrush" Value="#FF635BDC" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="6" ShadowDepth="5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryButtonFormat" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
        <!--<Setter Property="Background" Value="{StaticResource PrimaryGradient}" />-->
        <Setter Property="BorderBrush" Value="#6C66D1" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Margin="0 3 0 0" CornerRadius="6 6 0 0" Padding="10 0 10 0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}" />
        <Setter Property="Foreground" Value="White" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverGradient}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressedGradient}" />
                <Setter Property="BorderBrush" Value="#FF635BDC" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="6" ShadowDepth="5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>