<UserControl x:Class="CoursesManager.UI.Views.CalendarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:CoursesManager.UI.Views"
             xmlns:rs="clr-namespace:CoursesManager.UI.Views.Controls.CoursesCalendar"
             xmlns:rsc="clr-namespace:CoursesManager.UI.Views.Controls.Courses"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewmodels="clr-namespace:CoursesManager.UI.ViewModels" 
             mc:Ignorable="d">
    <Grid Margin="50">        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <rs:CalendarLayout x:Name="CourseCalendar" Courses="{Binding CoursesBetweenDates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" OnDateChangedCommand="{Binding OnCalendarDateChangedCommand}" OnDaySelectedCommand="{Binding OnDaySelectedCommand}"/>

		<Border Grid.Column="2" MinWidth="350" Margin="0 110 0 50" Background="White" CornerRadius="15, 15, 15, 15">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Border Height="55"
						CornerRadius="15,15,0,0"
						Background="{StaticResource PrimaryGradient}"
						VerticalAlignment="Top">
					<Border.Effect>
						<DropShadowEffect Color="Black"
										  Opacity="0.3"
										  BlurRadius="10"
										  ShadowDepth="5" />
					</Border.Effect>

					<TextBlock Text="Geplande cursussen" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10 0 10 0"/>
				</Border>

				<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">				
						<ItemsControl ItemsSource="{Binding CoursesForSelectedDay}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button Margin="20 10 20 0"
											HorizontalAlignment="Left"
											Style="{StaticResource IconButtonWithShadowStyle}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>

											<TextBlock Text="{Binding Code}"
													   Margin="0 0 10 0"
													   HorizontalAlignment="Left"
													   VerticalAlignment="Center"
													   FontSize="18"
													   FontWeight="Bold"
													   Foreground="{StaticResource PrimaryGradient}" />
											
											<materialDesign:PackIcon Grid.Column="1"
																	 Kind="InfoOutline"
																	 Width="24" Height="24"
																	 Foreground="{StaticResource PrimaryGradient}"
																	 Background="Transparent" />

											<Popup x:Name="popover"
												   IsOpen="{Binding IsPopoverOpen, RelativeSource={RelativeSource Mode=Self}}"
												   Placement="Bottom"
												   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=Self}}">
													<rsc:CourseCard/>
											</Popup>
										</Grid>

										<Button.Triggers>
											<EventTrigger RoutedEvent="Button.MouseEnter">
												<BeginStoryboard>
													<Storyboard>
														<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popover">
															<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
														</BooleanAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
											<EventTrigger RoutedEvent="Button.MouseLeave">
												<BeginStoryboard>
													<Storyboard>
														<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popover">
															<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
														</BooleanAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</Button.Triggers>
									</Button>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
				</ScrollViewer>
			</Grid>
		</Border>
    </Grid>
</UserControl>